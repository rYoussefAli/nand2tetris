// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Register(in=in, load=load, out=inm);

    // Inc16(in=inm, out=in16);
    // Mux16(a=inm, b=false, sel=reset, out=inres);
    // Mux16(a=inres, b=in16, sel=inc, out=outv);
    // Mux16(a=outv, b=in, sel=load, out=in1);
    // Register(in=in1, load=true, out=out, out=inm);


    Inc16(in=inm, out=in16);
    Mux16(a=inm, b=in16, sel=inc, out=outv);

    Mux16(a=in1, b=false, sel=reset, out=inres);
    Mux16(a=outv, b=in, sel=load, out=in1);
    Register(in=inres, load=true, out=out, out=inm);




    // Inc16(in=oo, out=o1);//Add
    // Mux16(a=oo, b=o1, sel=inc, out=o2);
   
    // Mux16(a=o2, b=in, sel=load, out=o3); //write
   
    // Mux16(a=o3, b=false, sel=reset, out=o4); //reset
   
    // Register(in=o4, load=true, out=out, out=oo);




    // DMux16(in=outf, sel=inc, a=outfno, b=outfyes);
    // Inc16(in=outfyes, out=outInc1);
    // Mux16(a=outfno, b=outInc1, sel=inc, out=outt1);
    // Register(in=outt1, load=inc, out=outt);
    // DMux16(in=outt, sel=reset, a=resetno, b=resetyes);
    // And16(a=resetno, b=resetno, out=out1);
    // And16(a=resetyes, b=resetno, out=out2);
    // Or16(a=out1, b=out2, out=outvv);
    // Register(in=outvv, load=true, out=out);
}
